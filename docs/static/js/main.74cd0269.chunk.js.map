{"version":3,"sources":["helpers/fetch.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/prepareEvents.js","actions/events.js","components/ui/NavBar.js","helpers/calendar-messeges-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRouter.js","router/PublicRouter.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js","reducers/uiReducer.js","types/types.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","logout","type","types","authLogout","checkingFinish","authCheckingFinish","login","user","authLogin","payload","useForm","initialState","useState","values","setValues","handleInputChange","target","name","value","reset","newFormState","LoginScreen","dispatch","useDispatch","lEmail","lPassword","loginValues","loginHandleInputChange","rName","rEmail","rPassword","rPassword2","registerValues","registerHandleInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","prepareEvents","events","map","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","NavBar","useSelector","state","auth","onClick","clear","eventLogout","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minute","second","add","nowPlus1","clone","initevent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","modalOpen","ui","activeEvent","calendar","formValues","setFormValues","useEffect","closeModal","uiCloseModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","eventSetActive","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","prototype","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","checking","exacto","path","require","uiReducer","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById","authStartLogin","authStartRegister","authStartTokenRenew"],"mappings":"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","file":"static/js/main.74cd0269.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\n\nexport const fetchSinToken = (endpoint, data, method = 'GET') => {\n    const url = `${ baseUrl }/${endpoint}`;\n\n    if(method === 'GET') {\n        return fetch(url);\n    } else {\n        return fetch (url, {\n            method,\n            headers: {\n                'content-type' : 'application/json' \n            },\n            body: JSON.stringify(data)\n        })\n    }\n}\n\nexport const fetchConToken = (endpoint, data, method = 'GET') => {\n    const url = `${ baseUrl }/${endpoint}`;\n    const token = localStorage.getItem('token') || '';\n\n\n    if(method === 'GET') {\n        return fetch(url, {\n            method,\n            headers:{\n            'x-token': token\n            }\n        });\n    } else {\n        return fetch (url, {\n            method,\n            headers: {\n                'content-type' : 'application/json',\n                'x-token': token \n            },\n            body: JSON.stringify(data)\n        })\n    }\n}\n\n\n","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\n\nexport const startLogin = (email, password) => {\n    return async( dispatch ) => {\n        const resp = await fetchSinToken(\n            'auth', \n            {\n                email, \n                password\n            }, \n            'POST'\n        );\n\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            \n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n    }\n}\n\nexport const startRegister = (name, email, password) => {\n    return async( dispatch ) => {\n        const resp = await fetchSinToken(\n            'auth/new', \n            {\n                name,\n                email, \n                password\n            }, \n            'POST'\n        );\n\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            \n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n    }\n}\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n        const resp = await fetchConToken('auth/renew');\n        const body = await resp.json();\n\n        if(body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            dispatch( checkingFinish() );\n        }\n\n\n    }\n}\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch( logout() );\n    }\n}\n\nconst logout = () => ({ type: types.authLogout })\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n})","import { useState } from \"react\"\n\nexport const useForm = (initialState = {}) => {\n\n    const [values, setValues] = useState(initialState)\n\n    const handleInputChange = ({target}) => {\n        setValues({...values, [target.name] : target.value})\n    }\n\n    const reset = (newFormState = initialState) => {\n        setValues( newFormState );\n    }\n\n    return [values, handleInputChange, reset]\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const [loginValues, loginHandleInputChange] = useForm({\n        lEmail: '',\n        lPassword: '',\n    });\n\n    const {lEmail, lPassword} = loginValues;\n\n    const [registerValues, registerHandleInputChange] = useForm({\n        rName: '',\n        rEmail: '',\n        rPassword:'',\n        rPassword2: ''\n    })\n\n    const {rName, rEmail, rPassword, rPassword2} = registerValues;\n\n    const handleRegisterSubmit = (e) => {\n        e.preventDefault();\n\n        if (rPassword !== rPassword2) {\n            return Swal.fire('Error', 'Las contraseñas tienen que coincidir', 'error');\n        }\n\n        dispatch( startRegister( rName, rEmail, rPassword ) );\n\n    }\n\n    const handleLoginSubmit = (e) => {\n        e.preventDefault();\n        dispatch(startLogin(lEmail, lPassword));\n    }\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLoginSubmit}>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name= 'lEmail'\n                                onChange={loginHandleInputChange}\n                                value = {lEmail}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name= 'lPassword'\n                                onChange={loginHandleInputChange}\n                                value = {lPassword}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegisterSubmit}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name='rName'\n                                onChange={registerHandleInputChange}\n                                value={rName}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name='rEmail'\n                                onChange={registerHandleInputChange}\n                                value={rEmail}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name='rPassword'\n                                onChange={registerHandleInputChange}\n                                value={rPassword} \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\"\n                                name='rPassword2'\n                                onChange={registerHandleInputChange}\n                                value={rPassword2} \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import moment from 'moment';\n\n\nexport const prepareEvents = (events=[]) => {\n\n\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment( e.end ).toDate(),\n            start: moment( e.start ).toDate()\n        })\n    );\n\n};","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\n\nexport const eventStartAddNew = ( event ) => {\n    return async( dispatch, getState ) => {\n\n        try {\n\n            const { uid, name } = getState().auth;\n\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n\n            if( body.ok ) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n            \n                dispatch( eventAddNew( event ) );\n            }\n            \n        } catch (error) {\n            console.log(error);\n        }\n\n\n\n    }\n}\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n})\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n})\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n})\n\nexport const eventStartUpdate = (event) => {\n    return async(dispatch) => {\n\n        try {\n            \n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\n            const body = await resp.json();\n\n            if(body.ok){\n                dispatch( eventUpdated( event ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nconst eventUpdated = ( e ) => ({\n    type: types.eventUpdated,\n    payload: e\n});\n\nexport const eventStartDelete = () => {\n    return async(dispatch, getState) => {\n\n        const {id} = getState().calendar.activeEvent;\n\n        try {\n            \n            const resp = await fetchConToken(`events/${id}`, {}, 'Delete');\n            const body = await resp.json();\n\n            if(body.ok){\n                dispatch( eventDeleted() );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nconst eventDeleted = () => ({type: types.eventDeleted});\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n       \n        try {\n\n            const resp = await fetchConToken( 'events' );\n            const body = await resp.json();\n\n            const events = prepareEvents( body.eventos );\n            \n            dispatch( eventLoaded( events ) );\n            \n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n};\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventLogout = () => ({\n    type: types.eventLogout\n})","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\nimport { eventLogout } from '../../actions/events';\n\nexport const NavBar = () => {\n    \n    const dispatch = useDispatch();\n\n    const {name} = useSelector(state => state.auth)\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n        dispatch(eventLogout());\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                {name}\n            </span>\n\n            <button className=\"btn btn-outline-danger\">\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span onClick={handleLogout}> Salir</span>\n            </button>\n            \n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({event}) => {\n    const {title, user} = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            {(user?.name) && <span>- { user.name } </span> }\n           \n        </div>\n    )\n}\n","import { types } from \"../types/types\"\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n})\n\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n})","import React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport Modal from \"react-modal\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiCloseModal } from \"../../actions/ui\";\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from \"../../actions/events\";\n\nconst customStyles = {\n    content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        marginRight: \"-50%\",\n        transform: \"translate(-50%, -50%)\",\n    },\n};\n\nModal.setAppElement(\"#root\");\n\nconst now = moment().minute(0).second(0).add(1, \"hour\");\nconst nowPlus1 = now.clone().add(1, \"hour\");\n\nconst initevent = {\n    title: \"Evento\",\n    notes: \"\",\n    start: now.toDate(),\n    end: nowPlus1.toDate(),\n};\n\nexport const CalendarModal = () => {\n    const dispatch = useDispatch();\n\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\n    const [titleValid, setTitleValid] = useState(true);\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeEvent } = useSelector(state => state.calendar);\n\n    const [formValues, setFormValues] = useState(initevent);\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if (activeEvent) {\n            setFormValues(activeEvent)\n        } else {\n            setFormValues(initevent)\n        }\n    }, [activeEvent, setFormValues])\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value,\n        });\n    };\n\n    const handleSubmitForm = e => {\n        e.preventDefault();\n\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentStart.isSameOrAfter(momentEnd)) {\n            Swal.fire(\n                \"Error\",\n                \"La fecha fin debe ser mayor a la fecha inicio\",\n                \"error\"\n            );\n            return;\n        }\n\n        if (title.trim().length < 2) {\n            setTitleValid(false);\n            return;\n        }\n\n        //Realizar grabacion en base de datos\n        if (activeEvent) {\n            dispatch(eventStartUpdate(formValues))\n        } else {\n            dispatch( eventStartAddNew( formValues ) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n    };\n\n    const handleStartDateChange = e => {\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            start: e,\n        });\n    };\n\n    const handleEndtDateChange = e => {\n        setDateEnd(e);\n        setFormValues({\n            ...formValues,\n            end: e,\n        });\n    };\n\n    const closeModal = () => {\n        dispatch(uiCloseModal());\n        dispatch(eventClearActiveEvent());\n        setFormValues(initevent)\n    };\n\n    return (\n        <div>\n            <Modal\n                isOpen={modalOpen}\n                onRequestClose={closeModal}\n                style={customStyles}\n                closeTimeoutMS={200}\n                className=\"modal\"\n                overlayClassName=\"modal-fondo\"\n            >\n                <h1> {( activeEvent ) ? 'Editar Evento' : 'Nuevo Evento' }</h1>\n                <hr />\n                <form className=\"container\" onSubmit={handleSubmitForm}>\n                    <div className=\"form-group\">\n                        <label>Fecha y hora inicio</label>\n                        <DateTimePicker\n                            onChange={handleStartDateChange}\n                            value={dateStart}\n                            className=\"form-control\"\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Fecha y hora fin</label>\n                        <DateTimePicker\n                            onChange={handleEndtDateChange}\n                            value={dateEnd}\n                            minDate={dateStart}\n                            className=\"form-control\"\n                        />\n                    </div>\n\n                    <hr />\n                    <div className=\"form-group\">\n                        <label>Titulo y notas</label>\n                        <input\n                            type=\"text\"\n                            className={`form-control ${\n                                !titleValid && \"is-invalid\"\n                            }`}\n                            placeholder=\"Título del evento\"\n                            name=\"title\"\n                            autoComplete=\"off\"\n                            value={title}\n                            onChange={handleInputChange}\n                        />\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">\n                            Una descripción corta\n                        </small>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <textarea\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Notas\"\n                            rows=\"5\"\n                            name=\"notes\"\n                            value={notes}\n                            onChange={handleInputChange}\n                        ></textarea>\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">\n                            Información adicional\n                        </small>\n                    </div>\n\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-outline-primary btn-block\"\n                    >\n                        <i className=\"far fa-save\"></i>\n                        <span> Guardar</span>\n                    </button>\n                </form>\n            </Modal>\n        </div>\n    );\n};\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui'\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch()\n\n    \n\n    return (\n        <button \n            className=\"btn btn-primary fab\"\n            onClick={ () => dispatch(uiOpenModal()) }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { eventStartDelete } from \"../../actions/events\";\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch()\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() )\n    };\n\n    return (\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    );\n};\n","import React, { useState } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\n\nimport { NavBar } from \"../ui/NavBar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nimport \"moment/locale/es\";\nimport { messages } from \"../../helpers/calendar-messeges-es\";\nimport { CalendarEvent } from \"./CalendarEvent\";\nimport { CalendarModal } from \"./CalendarModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiOpenModal } from \"../../actions/ui\";\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from \"../../actions/events\";\nimport { AddNewFab } from \"../ui/AddNewFab\";\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\nimport { useEffect } from \"react\";\n\nmoment.locale(\"es\");\n\nconst localizer = momentLocalizer(moment);\n\n\nexport const CalendarScreen = () => {\n    const { events, activeEvent } = useSelector(state => state.calendar);\n\n    const { uid } = useSelector(state => state.auth);\n\n    const [lastView, setLastView] = useState(\n        localStorage.getItem(\"lastView\") || \"month\"\n    );\n\n    \n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n       \n        dispatch( eventStartLoading() );\n\n    }, [dispatch])\n\n\n    const onDoubleClick = e => {\n        dispatch(uiOpenModal());\n    };\n\n    const onSelect = e => {\n        dispatch(eventSetActive(e));\n    };\n\n    const onViewChange = e => {\n        setLastView(e);\n        localStorage.setItem(\"lastView\", e);\n    };\n\n    const onSelectSlot = (e) => {\n        dispatch( eventClearActiveEvent() )\n    }\n\n    const eventStyleGetter = (event, start, end, isSelected) => {\n       \n        const style = {\n            backgroundColor: (uid === event.user._id) ? \"#367CF7\" : '#465660',\n            borderRadius: \"0px\",\n            opacity: 0.8,\n            display: \"block\",\n            color: \"white\",\n        };\n\n        return {\n            style,\n        };\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <NavBar />\n\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={messages}\n                eventPropGetter={eventStyleGetter}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelect}\n                onView={onViewChange}\n                onSelectSlot = {onSelectSlot}\n                selectable = {true}\n                view={lastView}\n                components={{\n                    event: CalendarEvent,\n                }}\n            />\n            <AddNewFab />\n            {\n                (activeEvent) && (<DeleteEventFab />)\n            }\n\n            <CalendarModal />\n        </div>\n    );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return(\n        <Route {...rest} \n\n            component = { ( props ) => (\n                (isAuthenticated)\n                    ? ( <Component {...props} />)\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        />\n    )  \n}\n\nPrivateRoute.prototype = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    return(\n        <Route {...rest} \n        \n         component = { ( props ) => (\n                (isAuthenticated)\n                    ? (<Redirect to=\"/\" />)\n                    : (<Component {...props} />)\n            ) }\n        />\n    )\n\n}\n\nPublicRoute.prototype = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { startChecking } from \"../actions/auth\";\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\nimport { PrivateRoute } from \"./PrivateRouter\";\nimport { PublicRoute } from \"./PublicRouter\";\n\nexport const AppRouter = () => {\n    const { checking, uid } = useSelector(state => state.auth);\n\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch]);\n\n    if (checking) {\n        return <h5>Espere....</h5>;\n    }\n\n    return (\n        <div>\n            <Router>\n                <Switch>\n                    <PublicRoute \n                        exacto \n                        path=\"/login\" \n                        component={LoginScreen} \n                        isAuthenticated = {!!uid}\n                    />\n\n                    <PrivateRoute \n                        exacto \n                        path=\"/\" \n                        component={CalendarScreen} \n                        isAuthenticated = {!!uid}\n                    />\n\n                    <Redirect to=\"/\" />\n                </Switch>\n            </Router>\n        </div>\n    );\n};\n","import { types } from \"../types/types\";\n\nconst { uiReducer } = require(\"./uiReducer\");\n\nconst initialState = {\n    checking: true\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.authLogin :\n            return {\n                ...state,\n                checking: false,\n                uid: action.payload.uid,\n                name: action.payload.name\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n    \n        default:\n           return state;\n    }\n\n}","import { types } from '../types/types';\n\n// {\n//     id: new Date().getTime(),\n//     title: 'Cumpleños del jefe',\n//     start: moment().toDate(),\n//     end: moment().add(2, 'hours').toDate(),\n//     user: {\n//         _id: '123',\n//         name:'Ariana'\n//     }\n// }\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [action.payload, ...state.events]\n            }\n\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n\n        case types.eventClearActiveEvent: \n            return {\n                ...state,\n                activeEvent: null\n            }\n        \n        case types.eventUpdated :\n            return {\n                ...state,\n                events: state.events.map(\n                    e => (e.id === action.payload.id) ? action.payload : e\n                )\n            }\n\n            case types.eventDeleted :\n                return {\n                    ...state,\n                    events: state.events.filter(\n                        e => (e.id !== state.activeEvent.id)\n                    ),\n                    activeEvent: null\n                }\n\n            case types.eventLoaded:\n                return {\n                    ...state,\n                    events: [ ...action.payload ]\n                }\n\n            case types.eventLogout:\n                return {...initialState};\n\n        default:\n            return state\n    }\n\n}","import {combineReducers} from 'redux'\nimport { authReducer } from './authReducer'\n\nimport { calendarReducer } from './calendarReducer'\nimport { uiReducer } from './uiReducer'\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    auth: authReducer,\n    calendar: calendarReducer\n\n})","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers =\n    (typeof window !== \"undefined\" &&\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n    compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport { AppRouter } from './router/AppRouter';\nimport { store } from './store/store';\n\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n  < CalendarApp />,\n  document.getElementById('root')\n);\n\n\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false\n}\n\n\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            };\n\n        case types.uiCloseModal:\n            return{\n                ...state,\n                modalOpen: false\n            }\n\n        default:\n            return state;\n    }\n\n}","export const types = {\n\n    uiOpenModal: '[ui] Open Modal',\n    uiCloseModal: '[ui] Close Modal',\n\n    eventSetActive: '[event] Set Active',\n    eventLogout: '[event] Set Logout',\n\n    eventStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add New',\n    eventClearActiveEvent: '[event] Clear Active Event',\n    eventUpdated: '[event] Event Updeted',\n    eventDeleted: '[event] Event Deleted',\n    eventLoaded: '[event] Events loaded',\n\n    authCheckingFinish: '[Auth] Finish checking login state',\n    authStartLogin: '[Auth] Start login',\n    authLogin: '[Auth] Login',\n    authStartRegister: '[Auth] Start register',\n    authStartTokenRenew: '[Auth] Start token renew',\n    authLogout:'[Auth] Logout',\n\n}"],"sourceRoot":""}